service: multi-agent
frameworkVersion: "3"

provider:
  name: aws
  runtime: python3.12
  region: ${env:REGION_AWS}
  stage: ${opt:stage, 'dev'}
  memorySize: 1024
  timeout: 30
  environment:
    STAGE: ${env:STAGE}
    REGION_AWS: ${env:REGION_AWS}
    LOG_LEVEL: ${env:LOG_LEVEL}
    FUNCTION_TIMEOUT: ${self:provider.timeout}
    EMBEDDING_MODEL_ID: ${env:EMBEDDING_MODEL_ID}
    LLM_MODEL_ID: ${env:LLM_MODEL_ID}
    PINECONE_ENVIRONMENT: ${env:PINECONE_ENVIRONMENT}
    PINECONE_INDEX_NAME: ${env:PINECONE_INDEX_NAME}
    PINECONE_API_KEY: ${env:PINECONE_API_KEY}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - bedrock:InvokeModel
            - bedrock:InvokeModelWithResponseStream
          Resource: "arn:aws:bedrock:*:*:foundation-model/*"
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "arn:aws:logs:*:*:*"

plugins:
  - serverless-dotenv-plugin

custom:
  dotenv:
    path: .env

package:
  individually: true
  include:
    - handlers/**
  exclude:
    - "**/__pycache__/**"
    - "**/*.pyc"
    - "**/.DS_Store"
    - "**/.venv/**"
    - "**/venv/**"
    - "**/node_modules/**"
    - "**/.pytest_cache/**"
    - "**/.git/**"
    - "**/.idea/**"
    - "**/tests/**"
    - "**/*.log"
    - "**/*.md"
    - "**/README*"

functions:
  teacher:
    handler: handlers.teacher_handler.lambda_handler
    name: ${self:service}-${self:provider.stage}-teacher
    description: Main teacher orchestrator function
    timeout: 30
    events:
      - http:
          path: ask
          method: post
          cors: true
    environment:
      FUNCTION_NAME: teacher

resources:
  Resources:
    ApiGatewayRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: ${self:service}-${self:provider.stage}-api
        Description: Teacher Assistant API Gateway

  Outputs:
    ApiGatewayRestApiId:
      Value:
        Ref: ApiGatewayRestApi
      Export:
        Name: ${self:service}-${self:provider.stage}-api-id
    ApiGatewayRestApiRootResourceId:
      Value:
        Fn::GetAtt:
          - ApiGatewayRestApi
          - RootResourceId
      Export:
        Name: ${self:service}-${self:provider.stage}-api-root-resource-id
